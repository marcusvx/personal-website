---
export interface Props {
  title?: string;
  description?: string;
}

const { 
  title = 'Marcus Ximenes - Software Developer', 
  description = 'Personal website and portfolio of Marcus Ximenes, a software developer with 15+ years of experience.' 
} = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet" />
    
    <!-- Theme initialization script -->
    <script>
      // Initialize theme before page loads to prevent flash
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      })();
    </script>
  </head>
  
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 antialiased">
    <slot />
    
    <!-- Theme toggle functionality -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const themeToggle = document.getElementById('theme-toggle');
        const lightIcon = document.getElementById('theme-toggle-light-icon');
        const darkIcon = document.getElementById('theme-toggle-dark-icon');

        function updateThemeIcons() {
          const isDark = document.documentElement.classList.contains('dark');
          if (isDark) {
            lightIcon.classList.remove('hidden');
            darkIcon.classList.add('hidden');
          } else {
            lightIcon.classList.add('hidden');
            darkIcon.classList.remove('hidden');
          }
        }

        function toggleTheme() {
          const isDark = document.documentElement.classList.contains('dark');
          
          if (isDark) {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('theme', 'light');
          } else {
            document.documentElement.classList.add('dark');
            localStorage.setItem('theme', 'dark');
          }
          
          updateThemeIcons();
        }

        // Initialize icons
        updateThemeIcons();

        // Add click event listener
        if (themeToggle) {
          themeToggle.addEventListener('click', toggleTheme);
        }

        // Listen for system theme changes
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
          if (!localStorage.getItem('theme')) {
            if (e.matches) {
              document.documentElement.classList.add('dark');
            } else {
              document.documentElement.classList.remove('dark');
            }
            updateThemeIcons();
          }
        });
      });
    </script>
  </body>
</html>

<style is:global>
  html {
    font-family: 'Inter', system-ui, sans-serif;
  }
  
  code {
    font-family: 'JetBrains Mono', monospace;
  }
  
  /* Dark mode */
  @media (prefers-color-scheme: dark) {
    html {
      color-scheme: dark;
    }
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 6px;
  }
  
  ::-webkit-scrollbar-track {
    background: transparent;
  }
  
  ::-webkit-scrollbar-thumb {
    background: rgb(156 163 175);
    border-radius: 3px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: rgb(107 114 128);
  }
  
  .dark ::-webkit-scrollbar-thumb {
    background: rgb(75 85 99);
  }
  
  .dark ::-webkit-scrollbar-thumb:hover {
    background: rgb(107 114 128);
  }
</style> 